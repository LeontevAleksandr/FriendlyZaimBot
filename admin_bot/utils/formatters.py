"""
–§–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º –±–æ—Ç–µ
"""
from typing import Dict, List
from datetime import datetime

from ..config.constants import PAYMENT_METHODS


def escape_html(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ HTML —Å–∏–º–≤–æ–ª—ã"""
    if not text:
        return ""
    return text.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')


def format_payment_methods(methods: List[str]) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤"""
    if not methods:
        return "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω—ã"
    if len(methods) == len(PAYMENT_METHODS):
        return "‚úÖ –í—Å–µ —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç—É–ø–Ω—ã"
    return "\n".join(f"   ‚Ä¢ {PAYMENT_METHODS[m]['name']}" for m in methods if m in PAYMENT_METHODS)


def format_offer_info(offer: Dict, offer_id: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ñ—Ñ–µ—Ä–µ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç HTML"""
    status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if offer.get('status', {}).get('is_active', True) else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
    countries = offer.get('geography', {}).get('countries', [])
    countries_text = ", ".join(countries)
    zero_text = "‚úÖ –ï—Å—Ç—å" if offer.get('zero_percent', False) else "‚ùå –ù–µ—Ç"

    metrics = offer.get('metrics', {})
    cr, ar, epc, epl = metrics.get('cr', 0), metrics.get('ar', 0), metrics.get('epc', 0), metrics.get('epl', 0)

    geography = offer.get('geography', {})
    ru_link = geography.get('russia_link', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
    kz_link = geography.get('kazakhstan_link') or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞–ª—é—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç—Ä–∞–Ω
    has_russia = 'russia' in countries
    has_kazakhstan = 'kazakhstan' in countries

    if has_russia and has_kazakhstan:
        currency_text = f"{offer['limits']['min_amount']:,} - {offer['limits']['max_amount']:,} ‚ÇΩ/‚Ç∏"
        epc_currency = "‚ÇΩ/‚Ç∏"
        epl_currency = "‚ÇΩ/‚Ç∏"
    elif has_kazakhstan:
        currency_text = f"{offer['limits']['min_amount']:,} - {offer['limits']['max_amount']:,} ‚Ç∏"
        epc_currency = "‚Ç∏"
        epl_currency = "‚Ç∏"
    else:
        currency_text = f"{offer['limits']['min_amount']:,} - {offer['limits']['max_amount']:,} ‚ÇΩ"
        epc_currency = "‚ÇΩ"
        epl_currency = "‚ÇΩ"

    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫
    ru_link_short = escape_html((ru_link[:50] + '...') if ru_link and len(ru_link) > 50 else ru_link)
    kz_link_short = escape_html((kz_link[:50] + '...') if kz_link != '–ù–µ —É–∫–∞–∑–∞–Ω–∞' and len(kz_link) > 50 else kz_link)

    logo = offer.get('logo')
    logo_status = f"‚úÖ {escape_html(logo)}" if logo else "‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
    payment_methods_text = format_payment_methods(offer.get('payment_methods', []))

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–æ–∫–æ–≤ –∑–∞–π–º–∞
    loan_terms = offer.get('loan_terms', {})
    if loan_terms:
        loan_terms_text = f"{loan_terms.get('min_days', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} - {loan_terms.get('max_days', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} –¥–Ω–µ–π"
    else:
        loan_terms_text = "–ù–µ —É–∫–∞–∑–∞–Ω—ã"

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç
    created = offer.get('status', {}).get('created_at', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    updated = offer.get('status', {}).get('updated_at', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')

    for dt_str in [created, updated]:
        if dt_str != '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ':
            try:
                dt = datetime.fromisoformat(dt_str.replace('Z', '+00:00'))
                if dt_str == created:
                    created = dt.strftime('%d.%m.%Y %H:%M')
                else:
                    updated = dt.strftime('%d.%m.%Y %H:%M')
            except Exception:
                pass

    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π
    offer_name = escape_html(offer.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'))
    description = escape_html(offer.get('description', '–ù–µ —É–∫–∞–∑–∞–Ω–æ'))

    return (
        f"‚úèÔ∏è <b>–û—Ñ—Ñ–µ—Ä {escape_html(offer_id)}</b>\n\n"
        f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {offer_name}\n"
        f"üìä <b>–°—Ç–∞—Ç—É—Å:</b> {status}\n"
        f"üåç <b>–°—Ç—Ä–∞–Ω—ã:</b> {countries_text}\n\n"
        f"üí∞ <b>–õ–∏–º–∏—Ç—ã:</b>\n   ‚Ä¢ –°—É–º–º–∞: {currency_text}\n"
        f"   ‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: {offer['limits']['min_age']} - {offer['limits']['max_age']} –ª–µ—Ç\n"
        f"   ‚Ä¢ –°—Ä–æ–∫ –∑–∞–π–º–∞: {loan_terms_text}\n\n"
        f"üéØ <b>–£—Å–ª–æ–≤–∏—è:</b>\n   ‚Ä¢ 0% –¥–ª—è –Ω–æ–≤—ã—Ö: {zero_text}\n   ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: {description}\n\n"
        f"üí≥ <b>–°–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è:</b>\n{payment_methods_text}\n\n"
        f"üìà <b>CPA –ú–µ—Ç—Ä–∏–∫–∏:</b>\n   ‚Ä¢ CR: {cr}%\n   ‚Ä¢ AR: {ar}%\n   ‚Ä¢ EPC: {epc} {epc_currency}\n   ‚Ä¢ EPL: {epl} {epl_currency}\n\n"
        f"‚≠ê <b>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</b> {offer['priority']['manual_boost']}/10\n"
        f"üñºÔ∏è <b>–õ–æ–≥–æ—Ç–∏–ø:</b> {logo_status}\n\n"
        f"üîó <b>–°—Å—ã–ª–∫–∏:</b>\n   ‚Ä¢ –†–§: {ru_link_short}\n   ‚Ä¢ –ö–ó: {kz_link_short}\n\n"
        f"üìÖ <b>–°–æ–∑–¥–∞–Ω:</b> {created}\nüìÖ <b>–û–±–Ω–æ–≤–ª–µ–Ω:</b> {updated}"
    )


def format_currency_icon(countries: List[str]) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –≤–∞–ª—é—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–∞–Ω"""
    if 'russia' in countries and 'kazakhstan' in countries:
        return "‚ÇΩ/‚Ç∏"
    elif 'kazakhstan' in countries:
        return "‚Ç∏"
    else:
        return "‚ÇΩ"