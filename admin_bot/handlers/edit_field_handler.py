"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–µ–π –æ—Ñ—Ñ–µ—Ä–æ–≤
"""
import logging
from datetime import datetime
from aiogram import F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext

from admin_bot.config.auth import is_admin
from admin_bot.states.edit_states import EditStates, PaymentMethodsStates
from admin_bot.keyboards.offer_keyboards import back_to_offer_keyboard
from admin_bot.keyboards.payment_keyboards import get_payment_methods_keyboard
from admin_bot.utils.offer_manager import load_offers, save_offers, update_offer_timestamp
from admin_bot.utils.formatters import format_payment_methods, escape_html
from admin_bot.utils.message_utils import safe_edit_message
from admin_bot.handlers.list_handlers import view_offer

logger = logging.getLogger(__name__)


async def edit_field(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—è –æ—Ñ—Ñ–µ—Ä–∞"""
    if not is_admin(callback.from_user.id):
        return

    try:
        data_part = callback.data.replace("field_", "")

        # –ü–∞—Ä—Å–∏–º —Ç–∏–ø –ø–æ–ª—è –∏ ID –æ—Ñ—Ñ–µ—Ä–∞
        if data_part.endswith("_ru_link"):
            offer_id, field = data_part.replace("_ru_link", ""), "ru_link"
        elif data_part.endswith("_kz_link"):
            offer_id, field = data_part.replace("_kz_link", ""), "kz_link"
        elif data_part.endswith("_payment_methods"):
            offer_id, field = data_part.replace("_payment_methods", ""), "payment_methods"
        elif data_part.endswith("_loan_terms"):
            offer_id, field = data_part.replace("_loan_terms", ""), "loan_terms"
        else:
            parts = data_part.rsplit("_", 1)
            if len(parts) != 2:
                await callback.answer("‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞")
                return
            offer_id, field = parts

        offers = load_offers()
        offer = offers.get("microloans", {}).get(offer_id)
        if not offer:
            await callback.answer("‚ùå –û—Ñ—Ñ–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è 0% –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
        if field == "zero":
            current_zero = offer.get('zero_percent', False)
            offer['zero_percent'] = not current_zero
            offer = update_offer_timestamp(offer)
            offers["microloans"][offer_id] = offer
            save_offers(offers)

            await callback.answer(f"0% {'–≤–∫–ª—é—á–µ–Ω' if not current_zero else '–æ—Ç–∫–ª—é—á–µ–Ω'}")
            await view_offer(callback)
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
        if field == "payment_methods":
            current_methods = offer.get('payment_methods', [])
            await state.set_state(PaymentMethodsStates.selecting)
            await state.update_data(offer_id=offer_id, current_methods=current_methods)

            text = (
                f"üí≥ <b>–°–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n"
                f"üìä <b>–¢–µ–∫—É—â–∏–µ —Å–ø–æ—Å–æ–±—ã:</b>\n{format_payment_methods(current_methods)}\n\n"
                f"üîß –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è:"
            )
            await safe_edit_message(
                callback.message,
                text,
                reply_markup=get_payment_methods_keyboard(current_methods)
            )
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–∞
        if field == "logo":
            logo_status = f"‚úÖ {escape_html(offer.get('logo'))}" if offer.get('logo') else "‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
            await state.set_state(EditStates.waiting_value)
            await state.update_data(offer_id=offer_id, field=field)

            text = (
                f"üñºÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞</b>\n\n"
                f"üìä <b>–¢–µ–∫—É—â–∏–π –ª–æ–≥–æ—Ç–∏–ø:</b> {logo_status}\n\n"
                f"üìé –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏:\n"
                f"‚Ä¢ '-' —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π –ª–æ–≥–æ—Ç–∏–ø\n"
                f"‚Ä¢ '–æ—Ç–º–µ–Ω–∞' —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
            )
            await safe_edit_message(
                callback.message,
                text,
                reply_markup=back_to_offer_keyboard(offer_id)
            )
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        await state.set_state(EditStates.waiting_value)
        await state.update_data(offer_id=offer_id, field=field)

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π
        current_values = {
            "name": escape_html(offer.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')),
            "desc": escape_html(offer.get('description', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')),
            "amounts": f"{offer['limits']['min_amount']} {offer['limits']['max_amount']}",
            "age": f"{offer['limits']['min_age']} {offer['limits']['max_age']}",
            "loan_terms": (
                f"{offer.get('loan_terms', {}).get('min_days', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} "
                f"{offer.get('loan_terms', {}).get('max_days', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}"
                if offer.get('loan_terms') else "–ù–µ —É–∫–∞–∑–∞–Ω—ã"
            ),
            "ru_link": escape_html(offer.get('geography', {}).get('russia_link', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')),
            "kz_link": escape_html(offer.get('geography', {}).get('kazakhstan_link') or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'),
            "priority": str(offer.get('priority', {}).get('manual_boost', 0)),
            "metrics": (
                f"CR: {offer.get('metrics', {}).get('cr', 0)}%, "
                f"AR: {offer.get('metrics', {}).get('ar', 0)}%, "
                f"EPC: {offer.get('metrics', {}).get('epc', 0)}, "
                f"EPL: {offer.get('metrics', {}).get('epl', 0)}"
            )
        }

        # –ü—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–µ–π
        field_prompts = {
            "name": f"üìù <b>–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:</b> <i>{current_values['name']}</i>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
            "desc": f"üìù <b>–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b> <i>{current_values['desc']}</i>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:",
            "amounts": f"üí∞ <b>–¢–µ–∫—É—â–∏–µ —Å—É–º–º—ã:</b> <i>{current_values['amounts']}</i>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ —Å—É–º–º—ã (—Ñ–æ—Ä–º–∞—Ç: –º–∏–Ω –º–∞–∫—Å):",
            "age": f"üë§ <b>–¢–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç:</b> <i>{current_values['age']}</i>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç (—Ñ–æ—Ä–º–∞—Ç: –º–∏–Ω –º–∞–∫—Å):",
            "loan_terms": f"üìÖ <b>–¢–µ–∫—É—â–∏–µ —Å—Ä–æ–∫–∏ –∑–∞–π–º–∞:</b> <i>{current_values['loan_terms']}</i>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ —Å—Ä–æ–∫–∏ –≤ –¥–Ω—è—Ö (—Ñ–æ—Ä–º–∞—Ç: –º–∏–Ω –º–∞–∫—Å):\n–ù–∞–ø—Ä–∏–º–µ—Ä: 5 30",
            "ru_link": f"üîó <b>–¢–µ–∫—É—â–∞—è —Å—Å—ã–ª–∫–∞ –†–§:</b>\n<i>{current_values['ru_link']}</i>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –†–æ—Å—Å–∏–∏:",
            "kz_link": f"üîó <b>–¢–µ–∫—É—â–∞—è —Å—Å—ã–ª–∫–∞ –ö–ó:</b>\n<i>{current_values['kz_link']}</i>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ (–∏–ª–∏ '-'):",
            "priority": f"‚≠ê <b>–¢–µ–∫—É—â–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</b> <i>{current_values['priority']}</i>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç (0-10):",
            "metrics": (
                f"üìà <b>–¢–µ–∫—É—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏:</b>\n<i>{current_values['metrics']}</i>\n\n"
                f"üìà <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ CPA –º–µ—Ç—Ä–∏–∫–∏ –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:</b>\n\n"
                f"<b>–°–ø–æ—Å–æ–± 1 - —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:</b>\n"
                f"<code>54.9 4.2 102.01 185.98</code>\n(CR AR EPC EPL)\n\n"
                f"<b>–°–ø–æ—Å–æ–± 2 - —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å —Å–∞–π—Ç–∞:</b>\n"
                f"<code>CR: 54.9%\nAR: 4.2%\nEPC: 102.01\nEPL: 185.98</code>"
            )
        }

        prompt_text = field_prompts.get(field, f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:")
        await safe_edit_message(
            callback.message,
            prompt_text,
            reply_markup=back_to_offer_keyboard(offer_id)
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ edit_field: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—è")


def register_edit_field_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–µ–π"""
    dp.callback_query.register(edit_field, F.data.startswith("field_"))