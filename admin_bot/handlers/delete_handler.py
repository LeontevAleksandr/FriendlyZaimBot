"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤
"""
import os
import logging
from aiogram import F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from admin_bot.config.auth import is_admin
from admin_bot.config.constants import IMAGES_DIR
from admin_bot.keyboards.main_keyboards import main_keyboard
from admin_bot.utils.offer_manager import load_offers, save_offers
from admin_bot.utils.message_utils import safe_edit_message

logger = logging.getLogger(__name__)


async def delete_offer(callback: CallbackQuery):
    """–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞"""
    if not is_admin(callback.from_user.id):
        return

    offer_id = callback.data.replace("delete_", "")

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    confirm_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_{offer_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"edit_{offer_id}")
        ]
    ])

    await safe_edit_message(
        callback.message,
        "‚ùó <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è</b>\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ—Ñ—Ñ–µ—Ä?\n\n"
        "‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!\n‚Ä¢ –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —Ñ–∞–π–ª –ª–æ–≥–æ—Ç–∏–ø–∞\n‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä–∞ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã",
        reply_markup=confirm_keyboard
    )


async def confirm_delete_offer(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞"""
    if not is_admin(callback.from_user.id):
        return

    offer_id = callback.data.replace("confirm_delete_", "")
    offers = load_offers()

    if offer_id not in offers.get("microloans", {}):
        await callback.answer("‚ùå –û—Ñ—Ñ–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    try:
        offer = offers["microloans"][offer_id]

        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ª–æ–≥–æ—Ç–∏–ø–∞ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if offer.get('logo'):
            logo_path = os.path.join(IMAGES_DIR, offer['logo'])
            if os.path.exists(logo_path):
                try:
                    os.remove(logo_path)
                    logger.info(f"–£–¥–∞–ª–µ–Ω –ª–æ–≥–æ—Ç–∏–ø: {logo_path}")
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞ {logo_path}: {e}")

        # –£–¥–∞–ª—è–µ–º –æ—Ñ—Ñ–µ—Ä –∏–∑ –±–∞–∑—ã
        offer_name = offer.get('name', offer_id)
        del offers["microloans"][offer_id]

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if save_offers(offers):
            await callback.answer("üóëÔ∏è –û—Ñ—Ñ–µ—Ä —É–¥–∞–ª–µ–Ω")
            await safe_edit_message(
                callback.message,
                f"üóëÔ∏è <b>–û—Ñ—Ñ–µ—Ä —É–¥–∞–ª–µ–Ω</b>\n\nüìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {offer_name}\nüè∑Ô∏è <b>ID:</b> {offer_id}\n\n‚úÖ –õ–æ–≥–æ—Ç–∏–ø —Ç–∞–∫–∂–µ —É–¥–∞–ª–µ–Ω —Å –¥–∏—Å–∫–∞",
                reply_markup=main_keyboard()
            )
            logger.info(f"–û—Ñ—Ñ–µ—Ä {offer_id} ({offer_name}) —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
        else:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞ {offer_id}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞ {offer_id}: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è")


def register_delete_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è"""
    dp.callback_query.register(delete_offer, F.data.startswith("delete_"))
    dp.callback_query.register(confirm_delete_offer, F.data.startswith("confirm_delete_"))