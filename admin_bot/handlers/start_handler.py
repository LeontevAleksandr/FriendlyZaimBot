"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∑–∞–ø—É—Å–∫–∞ –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
"""
import os
import sys
import logging
from aiogram import F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command

from admin_bot.config.auth import is_admin
from admin_bot.keyboards.main_keyboards import main_keyboard
from admin_bot.utils.message_utils import safe_edit_message

logger = logging.getLogger(__name__)


async def cmd_start(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        return

    await message.answer(
        "üîß <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∑–∞–π–º–æ–≤</b>",
        reply_markup=main_keyboard(),
        parse_mode="HTML"
    )


async def back_to_main(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    if not is_admin(callback.from_user.id):
        return

    await safe_edit_message(
        callback.message,
        "üîß <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∑–∞–π–º–æ–≤</b>",
        reply_markup=main_keyboard()
    )


async def restart_bot(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    if not is_admin(callback.from_user.id):
        return

    await callback.answer("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    await safe_edit_message(
        callback.message,
        "üîÑ <b>–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...</b>\n\n–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –∏ –Ω–∞–∂–º–∏—Ç–µ /start"
    )

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
    try:
        from admin_bot import bot
        await bot.session.close()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–µ—Å—Å–∏–∏: {e}")

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    os.execv(sys.executable, ['python'] + sys.argv)


def register_start_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∑–∞–ø—É—Å–∫–∞"""
    dp.message.register(cmd_start, Command("start"))
    dp.callback_query.register(back_to_main, F.data == "main_menu")
    dp.callback_query.register(restart_bot, F.data == "restart_bot")