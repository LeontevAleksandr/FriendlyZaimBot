import logging
from aiogram import Bot, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from main_bot.states.loan_flow import LoanFlow
from main_bot.keyboards.inline_keyboards import get_popular_offers_keyboard
from main_bot.utils.analytics import AnalyticsTracker
from shared.offer_manager import OfferManager
from shared.user_profile_manager import UserProfileManager

logger = logging.getLogger(__name__)


class LoanHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–∏—Å–∫–∞ –∑–∞–π–º–æ–≤"""

    def __init__(self, bot: Bot):
        self.bot = bot
        self.offer_manager = OfferManager()
        self.analytics = AnalyticsTracker()
        self.profile_manager = UserProfileManager()

    def register_handlers(self, dp):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
        dp.message.register(self.handle_popular_offers_button, F.text == "üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
        dp.message.register(self.handle_find_loan_button, F.text == "üí∞ –ù–∞–π—Ç–∏ –∑–∞–π–º")

    async def handle_popular_offers_button(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π - –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø –ö–û–ù–í–ï–†–°–ò–Ø"""
        popular_text = (
            "üî• <b>–ü–û–ü–£–õ–Ø–†–ù–´–ï –ó–ê–ô–ú–´</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–Ω–µ–≥:"
        )

        keyboard = get_popular_offers_keyboard()
        await message.answer(popular_text, reply_markup=keyboard, parse_mode="HTML")

    async def handle_find_loan_button(self, message: Message, state: FSMContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞ –∑–∞–π–º–∞"""
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        profile = await self.profile_manager.get_or_create_profile(
            message.from_user.id,
            message.from_user.username,
            message.from_user.first_name
        )

        await state.update_data(user_profile=profile.__dict__)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
        if profile.country and profile.age:
            # –í–û–ó–í–†–ê–©–ê–Æ–©–ò–ô–°–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ - –±—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫
            country_name = "üá∑üá∫ –†–æ—Å—Å–∏–∏" if profile.country == "russia" else "üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ"

            welcome_text = (
                f"üí∞ <b>–ù–∞–π–¥–µ–º –∑–∞–π–º —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!</b>\n\n"
                f"üìç –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
                f"üåç –°—Ç—Ä–∞–Ω–∞: {country_name}\n"
                f"üë§ –í–æ–∑—Ä–∞—Å—Ç: {profile.age} –ª–µ—Ç\n\n"
                f"üí∞ –ù–∞–π—Ç–∏ –∑–∞–π–º—ã —Å —ç—Ç–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏?"
            )

            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üí∞ –î–ê, –ù–ê–ô–¢–ò –ó–ê–ô–ú–´!",
                                      callback_data=f"quick_search_{profile.country}_{profile.age}")],
                [InlineKeyboardButton(text="‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="change_profile_settings")]
            ])

        else:
            # –ù–û–í–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
            welcome_text = (
                "üöÄ <b>–ù–∞–π–¥–µ–º –≤—ã–≥–æ–¥–Ω—ã–π –∑–∞–π–º –∑–∞ 30 —Å–µ–∫—É–Ω–¥!</b>\n\n"
                "üí∞ –ó–∞–π–º—ã –¥–æ 500,000‚Ç∏ / 50,000‚ÇΩ –Ω–∞ –∫–∞—Ä—Ç—É –∑–∞ 5 –º–∏–Ω—É—Ç\n"
                "‚úÖ –û–¥–æ–±—Ä—è–µ–º –¥–∞–∂–µ —Å –ø–ª–æ—Ö–æ–π –ö–ò\n"
                "üÜì 0% –¥–ª—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤\n"
                "‚ö° –ë–µ–∑ —Å–ø—Ä–∞–≤–æ–∫ –∏ –ø–æ—Ä—É—á–∏—Ç–µ–ª–µ–π\n\n"
                "–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–∏–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å:"
            )

            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üá∑üá∫ –†–æ—Å—Å–∏—è", callback_data="country_russia")],
                [InlineKeyboardButton(text="üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", callback_data="country_kazakhstan")]
            ])

            await state.set_state(LoanFlow.choosing_country)

        await message.answer(welcome_text, reply_markup=keyboard, parse_mode="HTML")